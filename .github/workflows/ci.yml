name: Integration
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      env:
        # Warning: instead of `localhost`, use the service
        # container's name, like `postgres`. This is the same
        # behavior as with `docker compose`.
        POSTGRES_HOST: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: 5432
        DYNAMO_HOST: localhost
        DYNAMO_PORT: 8000
        INTEGRATIONS_API_URL: http://integrations-api:5000
    # NOTE: the order of service containers MATTERS
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        ports:
          - 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      dynamo:
        image: amazon/dynamodb-local
        ports:
          - 8000
      integrations-api:
        image: public.ecr.aws/d4t3o3o7/integrations-api:latest
        env:
          PORT: 5000
          POSTGRES_HOST: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_DB: postgres
        ports:
          - 5000:5000
      # content-sync:
      #   image: public.ecr.aws/d4t3o3o7/integrations:latest
    steps:
      - uses: actions/checkout@v3
      # Create a fake organization
      - run: |
          curl -d '{"slug":"my-org"}' -H "Content-Type: application/json" -X POST http://integrations-api:5000/organizations
      # Run content-sync
      # - run: |
      #     docker run -e INPUT_INTEGRATIONS_REPO_PATH="." -e INPUT_INTEGRATIONS_API_BASE_URL=http://integrations-api:5000 -e INPUT_INTEGRATIONS_API_ADMIN_TOKEN='' --rm public.ecr.aws/d4t3o3o7/integrations:latest "./content-sync.js"
      # env:
      #   INPUT_INTEGRATIONS_REPO_PATH: ${{ github.workspace }}
      #   INPUT_INTEGRATIONS_API_BASE_URL: http://integrations-api:5000
      #   INPUT_INTEGRATIONS_API_ADMIN_TOKEN: ""
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - run: npm install
      # - run: npm run test -- --detectOpenHandles
      #   env:
      #     POSTGRES_HOST: localhost
      #     POSTGRES_PASSWORD: postgres
      #     POSTGRES_PORT: 5432
      #     DYNAMO_HOST: localhost
      #     DYNAMO_PORT: 8000
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
